<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Quotes', 'bizmarket');

/**
 * BaseQuotes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $symbol
 * @property string $name
 * @property float $last_price
 * @property float $prichange
 * @property float $pctchange
 * @property integer $volume
 * @property timestamp $tradetime
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method string    getSymbol()     Returns the current record's "symbol" value
 * @method string    getName()       Returns the current record's "name" value
 * @method float     getLastPrice()  Returns the current record's "last_price" value
 * @method float     getPrichange()  Returns the current record's "prichange" value
 * @method float     getPctchange()  Returns the current record's "pctchange" value
 * @method integer   getVolume()     Returns the current record's "volume" value
 * @method timestamp getTradetime()  Returns the current record's "tradetime" value
 * @method Quotes    setId()         Sets the current record's "id" value
 * @method Quotes    setSymbol()     Sets the current record's "symbol" value
 * @method Quotes    setName()       Sets the current record's "name" value
 * @method Quotes    setLastPrice()  Sets the current record's "last_price" value
 * @method Quotes    setPrichange()  Sets the current record's "prichange" value
 * @method Quotes    setPctchange()  Sets the current record's "pctchange" value
 * @method Quotes    setVolume()     Sets the current record's "volume" value
 * @method Quotes    setTradetime()  Sets the current record's "tradetime" value
 * 
 * @package    next
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuotes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('quotes');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('symbol', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'unique' => false,
             'length' => 18,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('last_price', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('prichange', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('pctchange', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('volume', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tradetime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}